# Run after-hooks of workflow executions. Changes to this workflow file enables only if it's available on the default branch.
#
# Please note that we should not checkout the target code because it contains unverified changes.

name: Workflow Hook

on:
  workflow_run:
    workflows:
      - CompareScreenshot
    types:
      - completed

# Disable all permissions. We have to enable required permissions at job-level.
permissions: { }

run-name: ${{ github.event.workflow_run.name }} - ${{ github.event.workflow_run.head_repository.owner.login }}:${{ github.event.workflow_run.head_branch }}

# Restrict the concurrency on a pair of a repository owner and a branch.
concurrency:
  group: compare-screenshot-workflow-hook-${{ github.event.workflow_run.head_repository.owner.login }}:${{ github.event.workflow_run.head_branch }}-${{ github.event.workflow_run.name }}
  cancel-in-progress: true

jobs:
  # Run every executions of workflows specified in workflow_run#workflows
  # This job will expose an associated pull request if exists.
  linked-pull-request:

    # Run this job only when it's required.
    # Array-literal is not available in Actions so we have to transform a json string into an array.
    if: >
      contains(fromJSON('["failure"]'), github.event.workflow_run.conclusion) &&
      contains(fromJSON('["Format"]'), github.event.workflow.name) ||
      contains(fromJSON('["success", "failure"]'), github.event.workflow_run.conclusion) &&
      contains(fromJSON('["UnitTest"]'), github.event.workflow.name)

    permissions:
      pull-requests: read # for listing pull requests

    timeout-minutes: 2

    outputs:
      pull-request: ${{ steps.linked-pull-request.outputs.entity }} # pull request entity (string)

    runs-on: ubuntu-latest

    steps:
      - id: linked-pull-request
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
            // Get the latest pull request

            // We have to use different branch format for fork repos.
            // fork repo = <author-repo>:<branch-name>
            // original repo = <branch-name>

            const headBranch = '${{ github.event.workflow_run.head_repository.fork && format('{0}:{1}', github.event.workflow_run.head_repository.owner.login, github.event.workflow_run.head_branch) || github.event.workflow_run.head_branch }}';

            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',

              head: headBranch,

              direction: 'desc',
              sort: 'updated',
              per_page: 1
            });

            if (pulls.length === 0) {
              core.warning('No pull request is found.');
            } else {
              core.setOutput('entity', pulls[0]);
            }

  # Run every executions of UnitTest workflow. (always)
  after-CompareScreenshot:
    needs:
      - linked-pull-request

    if: >
      github.event.workflow.name == 'UnitTest' &&
      needs.linked-pull-request.outputs.pull-request &&
      fromJSON(needs.linked-pull-request.outputs.pull-request).number

    permissions:
      actions: read # for downloading artifacts
      contents: none
      issues: none
      checks: none
      pull-requests: write # for creating a comment on pull requests

    timeout-minutes: 2

    runs-on: ubuntu-latest

    steps:
      - uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2.27.0
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: screenshot-diff-reports
          path: .diff-reports
      - id: generate-diff-reports
        name: Generate diff reports
        shell: bash
        run: |
          report_file=$(find .diff-reports -type f -name "compare-report.json")
          
          if [ -z "$report_file" ]; then
            echo "Error: compare-report.json not found in .diff-reports directory."
            exit 1
          fi
          
          total=$(jq '.summary.total' "$report_file")
          added=$(jq '.summary.added' "$report_file")
          changed=$(jq '.summary.changed' "$report_file")
          unchanged=$(jq '.summary.unchanged' "$report_file")
          
          if ! [[ $total =~ ^[0-9]+$ ]] || ! [[ $added =~ ^[0-9]+$ ]] || ! [[ $changed =~ ^[0-9]+$ ]] || ! [[ $unchanged =~ ^[0-9]+$ ]]; then
            echo "Error: Invalid data in ${report_file}. Please ensure the file contains valid numeric values for total, added, changed, and unchanged."
            exit 1
          fi
          
          comment=$(cat << EOF
          Summary of the Screenshot test Compare Report:
          
          Total: ${total}
          Added: ${added}
          Changed: ${changed}
          Unchanged: ${unchanged}
          EOF
          )
          echo "::set-output name=comment::$comment"

      - name: Add or update comment on PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ fromJSON(needs.linked-pull-request.outputs.pull-request).number }}
          body: ${{ steps.generate-diff-reports.outputs.comment }}